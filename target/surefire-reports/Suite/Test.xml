<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="7" hostname="Krishnas-MacBook-Air.local" failures="0" tests="4" name="Test" time="5.821" errors="0" timestamp="2021-12-24T06:03:27 IST">
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen()&amp;quot; because the return value of &amp;quot;com.qa.BaseTest.getDriver()&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen()" because the return value of "com.qa.BaseTest.getDriver()" is null
at com.qa.BaseTest.beforeMethod(BaseTest.java:167)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="-1.640306006807E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="-1.640306006808E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="-1.640306006808E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="-1.640306006808E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="-1.640306006808E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="-1.640306006809E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="-1.640306006809E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterClass AfterClass" time="-1.640306006809E9">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeClass beforeClass" time="0.0">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;io.appium.java_client.InteractsWithApps.launchApp()&amp;quot; because the return value of &amp;quot;com.qa.BaseTest.getDriver()&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "io.appium.java_client.InteractsWithApps.launchApp()" because the return value of "com.qa.BaseTest.getDriver()" is null
at com.qa.BaseTest.launchApp(BaseTest.java:310)
at com.qa.tests.ProductTests.beforeClass(ProductTests.java:50)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="-1.64030600681E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeMethod beforeMethod" time="-1.64030600681E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterMethod afterMethod" time="-1.64030600681E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="-1.64030600681E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterClass AfterClass" time="-1.640306006814E9">
    <skipped/>
  </testcase> <!-- @AfterClass AfterClass -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest afterTest" time="-1.640306006815E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- invalidPassword -->
  <testcase classname="com.qa.tests.LoginTests" name="successfulLogin" time="0.0">
    <skipped/>
  </testcase> <!-- successfulLogin -->
  <testcase classname="com.qa.tests.ProductTests" name="validateProductOnProductsPage" time="0.0">
    <skipped/>
  </testcase> <!-- validateProductOnProductsPage -->
  <testcase classname="com.qa.tests.ProductTests" name="validateProductOnProductDetailsPage" time="0.0">
    <skipped/>
  </testcase> <!-- validateProductOnProductDetailsPage -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="com.qa.BaseTest" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidUserName" time="0.0">
    <ignored/>
  </testcase> <!-- invalidUserName -->
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.qa.BaseTest" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.qa.BaseTest" name="baseTest" time="0.0">
    <ignored/>
  </testcase> <!-- baseTest -->
  <testcase classname="com.qa.BaseTest" name="baseTest" time="0.0">
    <ignored/>
  </testcase> <!-- baseTest -->
</testsuite> <!-- Test -->
